// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DropMenu should toMatchSnapshot work 1`] = `
<DropMenu
  menuData={
    Array [
      Object {
        "children": Array [
          Object {
            "name": "xxx",
            "to": "/ddd",
          },
        ],
        "subCategory": Array [
          Object {
            "children": Array [
              Object {
                "name": "xxx",
                "to": "/ddd",
              },
            ],
            "title": "xxx",
          },
        ],
        "title": "xxx",
      },
    ]
  }
  title="xxx"
>
  <div
    className="menuPopover"
    id="menuPopover"
  >
    <Popover
      content={[Function]}
      getPopupContainer={[Function]}
      mouseEnterDelay={0.1}
      mouseLeaveDelay={0.1}
      overlayClassName="popoverInMenu"
      overlayStyle={Object {}}
      placement="bottom"
      title={null}
      transitionName="zoom-big"
      trigger="hover"
    >
      <Tooltip
        arrowPointAtCenter={false}
        autoAdjustOverflow={true}
        getPopupContainer={[Function]}
        mouseEnterDelay={0.1}
        mouseLeaveDelay={0.1}
        overlay={
          <React.Fragment>
            <div
              className="ant-popover-inner-content"
            >
              <div
                className="menuMainContainer"
              >
                <div
                  className="menuSearchContainer"
                >
                  <Input
                    onChange={[Function]}
                    placeholder="输入关键词搜索"
                    prefix={
                      <ForwardRef(SearchOutlined)
                        className="searchIcon"
                      />
                    }
                    type="text"
                  />
                </div>
                <div
                  className="masonry"
                >
                  <div
                    className="column"
                  >
                    <div
                      className="newItem"
                    >
                      <div
                        className="subCategoryContainer"
                      >
                        <ForwardRef(TagOutlined)
                          className="categoryIcon"
                          style={
                            Object {
                              "marginRight": "4px",
                            }
                          }
                        />
                        <span
                          className="categoryTitle"
                          style={
                            Object {
                              "fontSize": undefined,
                            }
                          }
                        >
                          xxx
                        </span>
                      </div>
                      <SubCategory
                        title="xxx"
                      >
                        Object {
                          "name": "xxx",
                          "to": "/ddd",
                        }
                      </SubCategory>
                      <div
                        style={
                          Object {
                            "height": "5pxß",
                          }
                        }
                      />
                      <div
                        className="objectItemContainer categoryNameContainer"
                      >
                        <Link
                          href="/ddd"
                          style={
                            Object {
                              "fontSize": undefined,
                            }
                          }
                        >
                          xxx
                        </Link>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </React.Fragment>
        }
        overlayClassName="popoverInMenu"
        overlayStyle={Object {}}
        placement="bottom"
        prefixCls="ant-popover"
        transitionName="zoom-big"
        trigger="hover"
      >
        <ForwardRef(Tooltip)
          arrowContent={
            <span
              className="ant-popover-arrow-content"
            />
          }
          arrowPointAtCenter={false}
          autoAdjustOverflow={true}
          builtinPlacements={
            Object {
              "bottom": Object {
                "ignoreShake": true,
                "offset": Array [
                  0,
                  4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tc",
                  "bc",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "bottomLeft": Object {
                "ignoreShake": true,
                "offset": Array [
                  0,
                  4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tl",
                  "bl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "bottomRight": Object {
                "ignoreShake": true,
                "offset": Array [
                  0,
                  4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tr",
                  "br",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "left": Object {
                "ignoreShake": true,
                "offset": Array [
                  -4,
                  0,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "cr",
                  "cl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "leftBottom": Object {
                "ignoreShake": true,
                "offset": Array [
                  -4,
                  0,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "br",
                  "bl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "leftTop": Object {
                "ignoreShake": true,
                "offset": Array [
                  -4,
                  0,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tr",
                  "tl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "right": Object {
                "ignoreShake": true,
                "offset": Array [
                  4,
                  0,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "cl",
                  "cr",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "rightBottom": Object {
                "ignoreShake": true,
                "offset": Array [
                  4,
                  0,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "bl",
                  "br",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "rightTop": Object {
                "ignoreShake": true,
                "offset": Array [
                  4,
                  0,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tl",
                  "tr",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "top": Object {
                "ignoreShake": true,
                "offset": Array [
                  0,
                  -4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "bc",
                  "tc",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "topLeft": Object {
                "ignoreShake": true,
                "offset": Array [
                  0,
                  -4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "bl",
                  "tl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "topRight": Object {
                "ignoreShake": true,
                "offset": Array [
                  0,
                  -4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "br",
                  "tr",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
            }
          }
          getPopupContainer={[Function]}
          getTooltipContainer={[Function]}
          mouseEnterDelay={0.1}
          mouseLeaveDelay={0.1}
          onPopupAlign={[Function]}
          onVisibleChange={[Function]}
          overlay={
            <React.Fragment>
              <div
                className="ant-popover-inner-content"
              >
                <div
                  className="menuMainContainer"
                >
                  <div
                    className="menuSearchContainer"
                  >
                    <Input
                      onChange={[Function]}
                      placeholder="输入关键词搜索"
                      prefix={
                        <ForwardRef(SearchOutlined)
                          className="searchIcon"
                        />
                      }
                      type="text"
                    />
                  </div>
                  <div
                    className="masonry"
                  >
                    <div
                      className="column"
                    >
                      <div
                        className="newItem"
                      >
                        <div
                          className="subCategoryContainer"
                        >
                          <ForwardRef(TagOutlined)
                            className="categoryIcon"
                            style={
                              Object {
                                "marginRight": "4px",
                              }
                            }
                          />
                          <span
                            className="categoryTitle"
                            style={
                              Object {
                                "fontSize": undefined,
                              }
                            }
                          >
                            xxx
                          </span>
                        </div>
                        <SubCategory
                          title="xxx"
                        >
                          Object {
                            "name": "xxx",
                            "to": "/ddd",
                          }
                        </SubCategory>
                        <div
                          style={
                            Object {
                              "height": "5pxß",
                            }
                          }
                        />
                        <div
                          className="objectItemContainer categoryNameContainer"
                        >
                          <Link
                            href="/ddd"
                            style={
                              Object {
                                "fontSize": undefined,
                              }
                            }
                          >
                            xxx
                          </Link>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </React.Fragment>
          }
          overlayClassName="popoverInMenu"
          overlayStyle={Object {}}
          placement="bottom"
          prefixCls="ant-popover"
          transitionName="zoom-big"
          trigger="hover"
          visible={false}
        >
          <Trigger
            action="hover"
            afterPopupVisibleChange={[Function]}
            arrowContent={
              <span
                className="ant-popover-arrow-content"
              />
            }
            arrowPointAtCenter={false}
            autoAdjustOverflow={true}
            autoDestroy={false}
            blurDelay={0.15}
            builtinPlacements={
              Object {
                "bottom": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    0,
                    4,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "tc",
                    "bc",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "bottomLeft": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    0,
                    4,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "tl",
                    "bl",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "bottomRight": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    0,
                    4,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "tr",
                    "br",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "left": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    -4,
                    0,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "cr",
                    "cl",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "leftBottom": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    -4,
                    0,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "br",
                    "bl",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "leftTop": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    -4,
                    0,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "tr",
                    "tl",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "right": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    4,
                    0,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "cl",
                    "cr",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "rightBottom": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    4,
                    0,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "bl",
                    "br",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "rightTop": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    4,
                    0,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "tl",
                    "tr",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "top": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    0,
                    -4,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "bc",
                    "tc",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "topLeft": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    0,
                    -4,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "bl",
                    "tl",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
                "topRight": Object {
                  "ignoreShake": true,
                  "offset": Array [
                    0,
                    -4,
                  ],
                  "overflow": Object {
                    "adjustX": 1,
                    "adjustY": 1,
                  },
                  "points": Array [
                    "br",
                    "tr",
                  ],
                  "targetOffset": Array [
                    0,
                    0,
                  ],
                },
              }
            }
            defaultPopupVisible={false}
            destroyPopupOnHide={false}
            focusDelay={0}
            getDocument={[Function]}
            getPopupClassNameFromAlign={[Function]}
            getPopupContainer={[Function]}
            hideAction={Array []}
            mask={false}
            maskClosable={true}
            mouseEnterDelay={0.1}
            mouseLeaveDelay={0.1}
            onPopupAlign={[Function]}
            onPopupVisibleChange={[Function]}
            overlay={
              <React.Fragment>
                <div
                  className="ant-popover-inner-content"
                >
                  <div
                    className="menuMainContainer"
                  >
                    <div
                      className="menuSearchContainer"
                    >
                      <Input
                        onChange={[Function]}
                        placeholder="输入关键词搜索"
                        prefix={
                          <ForwardRef(SearchOutlined)
                            className="searchIcon"
                          />
                        }
                        type="text"
                      />
                    </div>
                    <div
                      className="masonry"
                    >
                      <div
                        className="column"
                      >
                        <div
                          className="newItem"
                        >
                          <div
                            className="subCategoryContainer"
                          >
                            <ForwardRef(TagOutlined)
                              className="categoryIcon"
                              style={
                                Object {
                                  "marginRight": "4px",
                                }
                              }
                            />
                            <span
                              className="categoryTitle"
                              style={
                                Object {
                                  "fontSize": undefined,
                                }
                              }
                            >
                              xxx
                            </span>
                          </div>
                          <SubCategory
                            title="xxx"
                          >
                            Object {
                              "name": "xxx",
                              "to": "/ddd",
                            }
                          </SubCategory>
                          <div
                            style={
                              Object {
                                "height": "5pxß",
                              }
                            }
                          />
                          <div
                            className="objectItemContainer categoryNameContainer"
                          >
                            <Link
                              href="/ddd"
                              style={
                                Object {
                                  "fontSize": undefined,
                                }
                              }
                            >
                              xxx
                            </Link>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </React.Fragment>
            }
            popup={[Function]}
            popupAlign={Object {}}
            popupClassName="popoverInMenu"
            popupPlacement="bottom"
            popupStyle={Object {}}
            popupTransitionName="zoom-big"
            popupVisible={false}
            prefixCls="ant-popover"
            showAction={Array []}
            visible={false}
          >
            <div
              className="newSiteMap"
              key="trigger"
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
            >
              <span
                className="appName"
              >
                xxx
              </span>
            </div>
          </Trigger>
        </ForwardRef(Tooltip)>
      </Tooltip>
    </Popover>
  </div>
</DropMenu>
`;
